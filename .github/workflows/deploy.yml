name: 🚀 Deploy to Render

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  prepare-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      actions: read
      checks: read
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: 🔧 Prepare files for Render
      run: |
        echo "📁 Preparando arquivos para Render..."
        echo "📋 Estrutura atual:"
        ls -la
        
        # Copiar arquivos do backend para raiz
        echo "📦 Copiando arquivos do backend para raiz..."
        cp backend/app.py ./
        cp backend/requirements.txt ./
        
        # Copiar risk_model.pkl se existir
        if [ -f "backend/risk_model.pkl" ]; then
          cp backend/risk_model.pkl ./
          echo "✅ risk_model.pkl copiado"
        else
          echo "⚠️ risk_model.pkl não encontrado, continuando..."
        fi
        
        # ✅ APENAS VERIFICAR se runtime.txt existe (não criar)
        if [ -f "runtime.txt" ]; then
          echo "✅ runtime.txt já existe - mantido"
          cat runtime.txt
        else
          echo "ℹ️ runtime.txt não encontrado, usando padrão do Render"
        fi
        
        # Listar arquivos na raiz para verificação
        echo "📋 Estrutura após preparação:"
        ls -la
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: ✅ Test application
      run: |
        echo "🧪 Testando se o app inicia..."
        python -c "
        try:
            from app import app
            print('✅ App importado com sucesso!')
            print('✅ Todas as rotas carregadas:')
            for route in app.routes:
                print(f'  - {route.path}')
        except Exception as e:
            print(f'❌ Erro ao importar app: {e}')
            exit(1)
        "
        
    - name: 💾 Commit deployment files
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        
        # Verificar se há mudanças
        git status
        
        # Adicionar apenas os arquivos de deploy
        git add app.py requirements.txt
        
        # Adicionar risk_model.pkl se foi copiado
        if [ -f "risk_model.pkl" ]; then
          git add risk_model.pkl
        fi
        
        # ✅ CORREÇÃO: Adicionar runtime.txt se ele JÁ EXISTIR
        if [ -f "runtime.txt" ]; then
          git add runtime.txt
          echo "✅ runtime.txt adicionado ao commit"
        fi
        
        # Fazer commit apenas se houver mudanças
        if git diff --staged --quiet; then
          echo "⚠️ Nenhuma mudança para commit"
        else
          git commit -m "🤖 Auto-deploy: Copied backend files to root for Render [skip ci]"
          git push origin HEAD:master
          echo "✅ Mudanças commitadas e enviadas"
        fi
        
    - name: 🎉 Deploy Ready
      run: |
        echo "🎉 Preparação para Render concluída!"
        echo "📁 Arquivos na raiz prontos para deploy:"
        ls -la
        echo ""
        echo "🚀 O Render fará deploy automaticamente!"